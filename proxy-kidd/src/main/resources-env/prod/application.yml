# mysql database
server:
port: 5597

spring:
datasource:
type: com.alibaba.druid.pool.DruidDataSource
driver-class-name: com.mysql.jdbc.Driver
url: jdbc:mysql://115.28.58.82:3306/phantom?characterEncoding=utf-8&autoReconnect=true&useSSL=false
username: root
password: phantom
filters: stat
maxActive: 20
initialSize: 1
maxWait: 60000
minIdle: 1
timeBetweenEvictionRunsMillis: 60000
minEvictableIdleTimeMillis: 300000
validationQuery: select 1 FROM DUAL
testWhileIdle: true
testOnBorrow: false
testOnReturn: false
poolPreparedStatements: true
maxOpenPreparedStatements: 20

jpa:
hibernate:
ddl-auto: update
database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
show-sql: true
servlet:
multipart:
max-request-size: 300MB
max-file-size: 1000MB

#\u8BBE\u5B9A\u521D\u59CB\u7C7B\u578B(\u9009\u62E9IP_LIST \u8FD8\u662F IP_SEGMENT)
input_type: ip_list

# Ports need to detect
data.address: /root/proxyScanner/ip_data/
detection.ports.file: /root/proxyScanner/ip_data/DetectPorts.txt
fileter_ip: /root/proxyScanner/ip_data/FilterIPList.txt

# Scanning frequency configuration
# Start time in 24 hours(0 ~ 23), set -1 to start the scanning immediately
inland.http.scanner.start: -1
inland.socks4.scanner.start: -1
inland.socks5.scanner.start: -1
# Interval in hours, set -1 to close the scanner
inland.http.scanner.interval: 24
inland.socks4.scanner.interval: -1
inland.socks5.scanner.interval: -1

# Start time in 24 hours(0 ~ 23), set -1 to start the scanning immediately
abroad.http.scanner.start: 15
abroad.socks4.scanner.start: 15
abroad.socks5.scanner.start: 15
# Interval in hours, set -1 to close the scanner
abroad.http.scanner.interval: -1
abroad.socks4.scanner.interval: -1
abroad.socks5.scanner.interval: -1